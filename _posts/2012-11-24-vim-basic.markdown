---
layout: post
title: "Vim初步"
date: 2012-11-24 10:31
comments: true
categories: vim
tags: vim
---

作为一个文本编辑器，Vim具有所有文本编辑器应有的功能，而且更有其他文本编辑器所无法比拟的特性。

本篇着重介绍VIM中最基本的功能，如果之前没有接触过VIM，建议阅读VIM自带的30分钟教程，直接在终端键入vimtutor，或者去安装目录中找vimtutor.bat。

如果实在不想看E文的帮助，[这里](http://vimcdoc.sourceforge.net/)有中文的vimdoc。

VIM有着非常陡峭的学习曲线，所以请各位学习VIM的同志们保持耐心。

<!-- more -->

##三种模式

VIM中常用的模式有三种：普通模式(normal)、插入模式(insert)、可视模式(visual)。

* 普通模式：  
    这种模式下可以执行一般的编辑器命令，移动光标、删除文本等，是VIM启动后的默认模式。可以说VIM强大的编辑能力很大程度上源于此模式。
* 插入模式：  
    此模式下，大部分按键都会向文本缓冲区中插入文本。
* 可视模式：  
    此模式下，移动光标可以选中文本，用于替换和复制等。

PS:在VIM配置文件中键盘映射nmap,imap,vmap的映射分别对应三种模式。

##模式转换

由普通模式进入插入模式有许多方法最常用的为以下几种：

* 在光标所在位置之前插入: `i`
* 在光标所在位置后插入：`a`
* 在本行行尾插入:`A`
* 在本行行首插入：`I`
* 替换当前光标所在字符：`r`

由Normal模式进入可视模式：

* 普通可视模式：`v`
* 块可视模式: `Ctrl+v`
* 返回普通模式：`Esc`

PS:VIM中大部分命令都有以下两种操作格式：

    [number] command object
    command [number] object

其中第一个命令是进行number次命令，第二个命令是对number个对象进行command动作

##基础移动

* 上下左右：`(count)kjhl`
* 上下翻页(一整页)：`CTRL-f`,`CRTL-b`
* 上下翻页(半页)：`CTRL-u`,`CTRL-d`

##移动进阶

* 移动到行末：`$`
* 移动到行首：`0`，`^`(第一个字符)
* 移动到下个单词词首：`w`
* 移动到上个单词词首：`b`
* 移动到下个单词词末：`E`
* 移动到上个单词词首：`e`
* 移动到文件开头：`gg`
* 移动到文件结束：`G`

##撤消与恢复

* 撤消一次: `u`
* 撤消所有动作：`U`
* 恢复：`Ctrl+R`

##剪切与复制

* 剪切：  
    其实VIM中的删除操作都是剪切，将当前删除的部分存入寄存器""，但是仅能缓存上一次的操作内容
* 复制：  
    在可视模式下选中需要复制内容，按`y`，或者在之前指定寄存器。如果需要整行复制，`(count)yy`
* 粘贴：  
    在普通模式下：`p`  
    不知道有没有人纠结于从VIM中复制文本，此处说明一下VIM的寄存器，VIM中共有9种寄存器，此处仅介绍5种：  
    * 无名（unnamed）寄存器：""，上面讲到过来，缓存最后一次操作内容
    * 数字（numbered）寄存器："0 - "9，缓存最近操作内容，复制与删除有别
    * 具名（named）寄存器："a - "z或"A - "Z，指定时可用
    * 选择及拖拽（selection and drop）寄存器："*, "+, "~，可用于与外部应用交互，使用前提为系统剪切板可用
    * 模式寄存器（last search pattern）："/，缓存最近的搜索模式

##搜索与替换

* 搜索与替换搜索：  
    `/`，从当前光标所在位置向下搜索  
    `？`，从当前光标所在位置向上搜索  
* 替换：  
    此处仅说明最简单的一种情况，在可视模式下选中需要被替换的内容区域，`:s/被替换部分/替换部分/gc`。最后的gc说明替换模式，g代表全局替换，c代表需要确认

##保存与退出  

* `:q!` 强制退出，不保存。其中!代表强制  
* `:wq` 保存并退出

注：学习VIM最重要的是善于运用`:h`
